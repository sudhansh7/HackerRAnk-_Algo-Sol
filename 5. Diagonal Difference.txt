https://www.hackerrank.com/challenges/diagonal-difference/problem


#include <bits/stdc++.h>

using namespace std;

// Complete the diagonalDifference function below.
int diagonalDifference(vector<vector<int>> arr, int n) 
{
    int i,j,d1=0,d2=0;
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            if(i==j)
            {
                d1=d1+arr[i][j];
                if(i+j == n-1)
                    d2=d2+arr[i][j];
            }
                
            else if(i+j == n-1)
                d2=d2+arr[i][j];
        }
    }

    int ans = abs(d1-d2);
    cout<<ans<<"\n"<<d1<<"\n"<<d2;;
    return ans;
}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    int n;
    cin >> n;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    vector<vector<int>> arr(n);
    for (int i = 0; i < n; i++) {
        arr[i].resize(n);

        for (int j = 0; j < n; j++) {
            cin >> arr[i][j];
        }

        cin.ignore(numeric_limits<streamsize>::max(), '\n');
    }

    int result = diagonalDifference(arr,n);

    fout << result << "\n";

    fout.close();

    return 0;
}
